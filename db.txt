- db
	[generic]
		- country
			- id
			- name
		- state
			- id
			- country_id
			- name
		- province
			- id
			- country_id
			- state_id
			- name
		- city
			- id
			- country_id
			- state_id
			- province_id
			- name
	[relations]
		- users
			- id
			- name
			- surname
			- dob
			- gender
			- residence_city_id
			- birth_place_city_id
		 	- email
		 	- password
		 	- otp -> for change password -> as table?
		 	- level
		- user_relations
			- id
			- user_id
			- related_user_id
			- relation
		- relation
			- id
			- name -> father, brother, mother, sister ...
		- level
			- id
			- name -> admin, sub-admin ...
	[offers/ads/news]
		- offers
			- id
			- type
			- user_id
			- title
			- description
			- from
			- to
			- visibility -> in % ?
			- charge -> cost of owner
			- viewed -> how many times sent to FE
			- likes?
		- attachments
			- offer_id
			- blob
		- range
			- id
			- offer_id
			- city_id

endpoints
	- register user // Ok
	- login user // Ok
	- update user // Ok
	- delete user // Ok
	- add otp
	- check user otp for confirmation
	- change password
	- forgot password

	- get relations // Ok
	- get relations by user // Ok
	- add relation  // Ok -> manage bidirectional relation father -> also son
	- remove relation // Ok
	- update relation // not needed, only remove

	- get offers
	- get offers by area
	- get offers by user
	- add offer
	- update offer
	- remove offer


X deleted nodes
X bidirectional relation -> row?
X relation old generation 1,2,3,4,5,6 -> can do with recursion
X relation max nodes 1,N -> all open
find relation between 2 people
    - by users -> one first node ok, others generic message
    - by place -> prov, reg
login and reg on login
users list
    - only admins ?
    - search for others
manage images
X renders
dates